{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["uuidv4","require","v4","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","onChange","id","type","pattern","title","required","disabled","Component","Filter","filter","defaultValue","ContactItem","deleteContact","onClick","protoTypes","PropTypes","string","isRequired","func","ContactList","contacts","onBtnDelete","map","arrayOf","shape","App","formSubmit","find","el","alert","push","filterContacts","normalizeFilter","toLowerCase","includes","onFilterChange","onDeleteContact","contactId","prevState","contact","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","contactsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d53dee4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\n///\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state); // отпарвка данных\r\n\r\n    this.reset(); // очищение формы\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"form__box\" onSubmit={this.handleSubmit}>\r\n        {/* <div className=\"form__btn-thumb\"> */}\r\n        <label className=\"form__label-box\">\r\n          <span className=\"form__label\"> Name</span>\r\n          <input\r\n            className=\"form__input\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            id={uuidv4()}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            data-action=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span className=\"form__label\"> Number</span>\r\n          <input\r\n            className=\"form__input\"\r\n            onChange={this.handleChange}\r\n            id={uuidv4()}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            data-action=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр, и может содержать пробелы, тире, круглые скобки, и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <div className=\"form__btn-thumb\">\r\n          <button\r\n            className=\"form__addBtn\"\r\n            type=\"submit\"\r\n            disabled={!number || !name}\r\n          >\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n\r\n// +++++\r\n// handleChange = (e) => {\r\n//   const { name, value } = e.currentTarget;\r\n//   this.setState(() => {\r\n//   //   this.state.contacts.map((el) => {\r\n//   //     if (value === el.name) {\r\n//   //       return alert(`${value} is already in contacts`);\r\n//   //     }\r\n//   //   });\r\n//   // });\r\n//   return this.setState({ [name]: value })\r\n// };\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, value }) => (\r\n  <div>\r\n    <h3 className=\"contacts__title-find\">Find contacts by name</h3>\r\n    <label>\r\n      <input\r\n        className=\"contacts__input\"\r\n        type=\"text\"\r\n        defaultValue={filter}\r\n        onChange={value}\r\n      ></input>\r\n    </label>\r\n  </div>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nconst ContactItem = ({ name, number, id, deleteContact }) => {\r\n  return (\r\n    <li id={uuidv4()} key={id} className=\"contacts__item\">\r\n      {name}\r\n      <span>: {number}</span>\r\n      <button className=\"contacts__btn\" onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nContactItem.protoTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactItem from \"./ContactItem\";\r\n\r\n//////\r\nconst ContactList = ({ contacts, onBtnDelete }) => (\r\n  <>\r\n    <ul className=\"contacts__list\">\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            deleteContact={onBtnDelete}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.protoTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n  onBtnDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n// =========\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactList from \"./ContactList/ContactList\";\n// import \"./styles/index\";\nimport \"../styles/Container.scss\";\nimport \"../styles/Form.scss\";\nimport \"../styles/ContactsList.scss\";\n\nconst { v4: uuidv4 } = require(\"uuid\");\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  //пpинимает данные из формы\n  formSubmit = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    if (contacts.find((el) => name === el.name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    this.setState({\n      [contacts]: contacts.push({\n        id: uuidv4(),\n        name: name,\n        number: number,\n      }),\n    });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((el) =>\n      el.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n  onFilterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  onDeleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n  handleFilter() {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((el) =>\n      el.name.toLowerCase().includes(normalizeFilter)\n    );\n  }\n  render() {\n    const { filter } = this.state;\n    const contactsData = this.filterContacts();\n    return (\n      <div className=\"container\">\n        <h1 className=\"header\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmit} />\n\n        <h2 className=\"contacts__title\">Contacts</h2>\n        <Filter value={this.onFilterChange} filter={filter} />\n        <ContactList\n          contacts={contactsData}\n          onBtnDelete={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"modern-normalize/modern-normalize.css\";\r\nimport App from \"./components/App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>{<App />}</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}